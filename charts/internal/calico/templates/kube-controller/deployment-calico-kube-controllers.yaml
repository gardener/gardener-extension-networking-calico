{{- if .Values.config.kubeControllers.enabled }}
---
# Source: calico/templates/calico-kube-controllers.yaml
# See https://github.com/projectcalico/kube-controllers
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
    gardener.cloud/role: system-component
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      k8s-app: calico-kube-controllers
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
        origin: gardener
        k8s-app: calico-kube-controllers
        gardener.cloud/role: system-component
    spec:
      tolerations:
      # Make sure kube-controllers gets scheduled on all nodes.
      - effect: NoSchedule
        operator: Exists
      serviceAccountName: calico-kube-controllers
      priorityClassName: system-cluster-critical
      # Make sure to not use the coredns for DNS resolution.
      dnsPolicy: Default
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: calico-kube-controllers
          image: {{ index .Values.images "calico-kube-controllers" }}
          env:
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: node,loadbalancer
            - name: DATASTORE_TYPE
              value: kubernetes
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              memory: 2Gi
          livenessProbe:
            exec:
              command:
              - /usr/bin/check-status
              - -l
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
                - /usr/bin/check-status
                - -r
            periodSeconds: 10
            timeoutSeconds: 10
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
{{- end }}
